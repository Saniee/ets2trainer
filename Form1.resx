<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="BGWorker.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////////////////wAf//gAD//gAAP/4B
        gP/8A8D//gAAf/8AAD/+AAA//wAAP/+8AD/+/AA//3gAP/+YAD//0AB///gAf//8AH///gD///wA///+
        B/////////////////////////////////8=
</value>
  </data>
</root>